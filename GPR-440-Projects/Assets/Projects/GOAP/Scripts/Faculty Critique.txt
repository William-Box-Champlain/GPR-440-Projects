Just like in my critique with Jeff, I brought the incomplete version of the vector-flow-field navigation system to Professor Scott Barrett for his review and critique. As before with Jeff, I first had to explain the system to Scott as well as what and how a vector-flow-field can provide a more optimal pathfinding solution when compared against a more traditional pathfinding system such as A*.
And in a similar vein to Jeff, Scott didn't actually have any critique of the system architecture and the design of the system. Any issues he did see with the system, he saw that I also had implemented a solution a couple lines down. An example of this would be a function that I had written that was overly busy, but after looking at it for a little bit, I decided I needed to reduce its effects to something much more manageable. He also noted me implementing design patterns that he himself would have utilized in this situation.
So, with no real critique of the code as it was presented to him, the question Scott ultimately landed on was: does the system actually improve performance versus A* or navmesh based navigation? This is where we run into a bit of a problem with presenting the system. Since this code is for an incomplete system, I am not able to actually demonstrate any sort of efficiency gains when compared to A* or the Unity navmesh navigation system.
The only thing I can really use as an example would be providing a list of games that do utilize flow field-based navigation instead of A*. In almost all instances that I can think of, when flow field navigation is being utilized, it is when the game is trying to create navigational data for an extremely large number of agents.
As a historical example, I can point towards the RTS Supreme Commander 2, which has a unit count of roughly 1,000 agents per player and utilizes flow field navigation as its navigation solution. As a more recent example, the game A Plague Tale: Requiem utilized vector-flow-field based navigation in order to direct the AI rats that harass the player consistently throughout the game. With additional optimizations, the Plague Tale team was capable of displaying up to 300,000 rats on screen and having them navigating.
However, theoretical efficiency gains aren't worth much, especially when compared to demonstrated efficiency gains. And so I hope to continue the development of this vector-flow-field navigation-system on my own outside of the context of this class, and then demonstrate these efficiency gains by building a scene that would be impossible to run using Unity's default navmesh system.